---
description: 
globs: *.tsx,*.py,*.ts
alwaysApply: false
---
## 代码检查
- 自动检查代码是否符合项目命名规范
- 验证新代码是否遵循已确立的架构模式
- 确保导入的库和框架与技术栈一致
- 检查API实现是否遵循RESTful规范

## API设计
- 所有API必须遵循OpenAPI 3.0规范文档化
- API版本必须在URI路径中指定，如/api/v1/resources
- 优先使用标准HTTP方法(GET/POST/PUT/PATCH/DELETE)
- 分页参数统一使用page和page_size
- API响应时间应符合技术约束（REST API端点小于500ms）

## 错误处理
- 使用统一错误响应格式，包含错误码、信息和详情
- 服务端错误需记录详细日志，客户端仅提供安全信息
- 实现请求重试机制，特别是对500和429状态码
- 错误码使用snake_case格式，如invalid_api_key

## 安全验证
- 自动检查外部输入的验证和清洗措施
- 验证敏感信息是否使用AES-256算法加密
- 检查API认证是否使用Bearer令牌或API密钥
- 验证是否实施了防止提示词注入的措施

## 性能检查
- 自动检查大型文档是否按规定分块处理
- 验证批量API请求的实现方式
- 检查是否实现了响应流式传输
- 验证向量检索是否使用混合搜索提高准确性

## 安全实践
- 自动检查外部输入的验证和清洗措施
- 验证敏感信息是否使用AES-256算法加密
- 检查API认证是否使用Bearer令牌或API密钥
- 验证是否实施了防止提示词注入的措施
- 实施RBAC(基于角色的访问控制)和资源级权限
- 确保完整审计日志记录所有关键操作